
#Область СправкаПодсистемы

Функция Help() Экспорт
	Возврат ПолучитьОписаниеФункционала();	
КонецФункции

Функция Помощь() Экспорт
	Возврат ПолучитьОписаниеФункционала();
КонецФункции

Функция Справка() Экспорт
	Возврат ПолучитьОписаниеФункционала();
КонецФункции

Функция Хэлп() Экспорт
	Возврат ПолучитьОписаниеФункционала();
КонецФункции

Функция Хелп() Экспорт
	Возврат ПолучитьОписаниеФункционала();
КонецФункции

Функция ПолучитьОписаниеФункционала()
	ОписаниеФункционала = Новый Структура;
	ОписаниеФункций 	= Новый Структура;
	
	// Описание функции Вижу.
	ОписаниеФункции = Новый Структура("Наименование,Описание,ПримерыИспользования");
	ОписаниеФункции.Наименование	= "Функция Вижу(Знач АнализируемыеДанные)";
	ОписаниеФункции.Описание		= "Выводит данные содержащиеся в менеджере временных таблиц или в запросе.";
	
	ПримерыИспользования = Новый Структура;
	ПримерыИспользования.Вставить("Пример1","Вижу(Запрос)");
	ПримерыИспользования.Вставить("Пример2","Вижу(МенеджерВременныхТаблиц)");
	ОписаниеФункции.ПримерыИспользования	= ПримерыИспользования;
	
	Описаниефункций.Вставить("Вижу",ОписаниеФункции);
	
	// Описание функции Присвоить.
	ОписаниеФункции = Новый Структура("Наименование,Описание,ПримерыИспользования");
	ОписаниеФункции.Наименование	= "Функция Присвоить(А, Знач Б)";
	ОписаниеФункции.Описание		= "Присваивает переменной А значение переменной В.";
	
	ПримерыИспользования = Новый Структура;
	ПримерыИспользования.Вставить("Пример1","Присвоить(Отказ,Ложь)");
	ОписаниеФункции.ПримерыИспользования	= ПримерыИспользования;
	
	Описаниефункций.Вставить("Присвоить",ОписаниеФункции);
	
	// Описание функции ВыполнитьКод.
	
	ОписаниеФункции = Новый Структура("Наименование,Описание,ПримерыИспользования");
	ОписаниеФункции.Наименование	= "ВыполнитьКод(ТекстКода, П1=Неопределено,  П2=Неопределено, П3=Неопределено, П4=Неопределено)";
	ОписаниеФункции.Описание		= "Выполняет любой код на языке 1С над любыми данными, переданными в функцию.";
	
	ПримерыИспользования = Новый Структура;
	ПримерыИспользования.Вставить("Пример1","ВыполнитьКод(""П1.Вставить(П2,П3)"",НаборРеквизитов,ИмяКлюча,ЗначениеКлюча) //Выводит сообщение"   );
	ПримерыИспользования.Вставить("Пример2","ВыполнитьКод(""П1.Вставить(П2,П3)"",НаборРеквизитов,ИмяКлюча,ЗначениеКлюча) // В структуру НаборРеквизитов вставляем значение с ключем ИмяКлюча, ЗначениеКлюча.");
	ОписаниеФункции.ПримерыИспользования	= ПримерыИспользования;
	
	Описаниефункций.Вставить("ВыполнитьКод",ОписаниеФункции);
	
	ОписаниеФункционала.Вставить("Функции",Описаниефункций);
	
	Возврат ОписаниеФункционала;
	
КонецФункции

#КонецОбласти

#Область ФункционалОтладки

// Функция - Выводит данные содержащиеся в менеджере временных таблиц или в запросе.
//
// Параметры:
//  Запрос	 - Запрос, МенеджерВременныхТаблиц	- 
// 
// Возвращаемое значение:
//   - 
//
Функция Вижу(Знач АнализируемыеДанные)  Экспорт
	
	Если ТипЗнч(АнализируемыеДанные) = Тип("Запрос") Тогда
		МенеджерВременныхТаблиц = АнализируемыеДанные.МенеджерВременныхТаблиц;
	ИначеЕсли ТипЗнч(АнализируемыеДанные) = Тип("МенеджерВременныхТаблиц") Тогда
		МенеджерВременныхТаблиц = АнализируемыеДанные;
	КонецЕсли;		
		
	#Если НЕ Клиент И НЕ Сервер И НЕ ВнешнееСоединение Тогда
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	#КонецЕсли
	
	ОписаниеТаблицМВТ = Новый Структура;
	
	ТаблицыМенеджера = МенеджерВременныхТаблиц.Таблицы;
	
	Для Каждого ТаблицаМенеджера Из ТаблицыМенеджера Цикл
		ДанныеТаблицыМенеджера	= ТаблицаМенеджера.ПолучитьДанные().Выгрузить(); 
		ИмяТаблицыМенеджера		= ТаблицаМенеджера.ПолноеИмя + "_qty_" + ДанныеТаблицыМенеджера.Количество();
		ОписаниеТаблицМВТ.Вставить(ИмяТаблицыМенеджера, ДанныеТаблицыМенеджера)
	КонецЦикла;
		
	СтруктураМВТ = Новый Структура;
	СтруктураМВТ.Вставить("Таблицы",ОписаниеТаблицМВТ);
		
	СтруктураЗапроса = Новый Структура();
	СтруктураЗапроса.Вставить("МенеджерВременныхТаблиц",СтруктураМВТ);
	
	Если Не ТипЗнч(АнализируемыеДанные) = Тип("Запрос") Тогда
		Возврат СтруктураЗапроса;	
	КонецЕсли;
	
	Запрос = АнализируемыеДанные;
	
	ЗапросПросмотра = Новый Запрос;
	ЗапросПросмотра.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	ЗапросПросмотра.Текст = Запрос.Текст; 
	
	Для Каждого ПараметрЗапроса Из Запрос.Параметры Цикл
		ЗапросПросмотра.Параметры.Вставить(ПараметрЗапроса.Ключ,ПараметрЗапроса.Значение);
	КонецЦикла;

	Попытка
		РезультатЗапроса = ЗапросПросмотра.ВыполнитьПакетСПромежуточнымиДанными();	
	Исключение
		РезультатЗапроса = Неопределено;
	КонецПопытки;
	
	ДанныеЗапроса = Новый Структура;
	ДанныеЗапроса.Вставить("Запрос",      ЗапросПросмотра);
	ДанныеЗапроса.Вставить("Результат",   РезультатЗапроса);
	ДанныеЗапроса.Вставить("Таблицы",     Неопределено);
	
	СтруктураЗапроса.Вставить("Запрос",ДанныеЗапроса);
	
	Возврат СтруктураЗапроса;
	
КонецФункции

// Функция - Присваивает переменной А значение переменной В
//
// Параметры:
//  А	 - Любой тип - 
//  Б	 - Любой тип - 
// 
// Возвращаемое значение:
//  А - 
//
Функция Присвоить(А, Знач Б) Экспорт
	А=Б; 
	Возврат А;
КонецФункции

// Функция - ВыполнитьКод позволяет в любой момент выполнить любой код на языке 1С над любыми данными, переданными ей. 
//
// Параметры:
//  Код	 - Строка - Код, на языке 1С для выполнения.
//  П	 - Любой тип - 
//  П1	 - Любой тип - 
//  П2	 - Любой тип - 
//  П3	 - Любой тип - 
//  П4	 - Любой тип - 
// 
// Возвращаемое значение:
//  Блево,Строка - В случае успешного выполнения исполняемого колда возвращает значение Истина, иначе возвращает описание ошибки.
//
// Примеры использования:
//	ВыполнитьКод("Сообщить(""Сумма:""+П1)", С); // Выводит сообщение 
//	ВыполнитьКод("П1.Вставить(П2,П3)",НаборРеквизитов,ИмяКлюча,ЗначениеКлюча);	// В структуру НаборРеквизитов вставляем значение с ключем ИмяКлюча, ЗначениеКлюча.
//
Функция ВыполнитьКод(ТекстКода, П1=Неопределено,  П2=Неопределено, П3=Неопределено, П4=Неопределено) Экспорт
    
    Попытка
        Выполнить(ТекстКода);
    Исключение
        Возврат ОписаниеОшибки()
    КонецПопытки;
    
    Возврат Истина;
    
КонецФункции

#КонецОбласти


// Для вдохновления читать:
//http://kb.mista.ru/article.php?id=105
//https://infostart.ru/public/119661/

