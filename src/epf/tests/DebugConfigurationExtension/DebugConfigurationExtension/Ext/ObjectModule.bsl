Перем КонтекстЯдра;
Перем Ожидаем;
Перем Утверждения;
Перем ГенераторТестовыхДанных;
Перем ЗапросыИзБД;
Перем УтвержденияПроверкаТаблиц;

#Область ЮнитТестирование

Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	
	КонтекстЯдра				= КонтекстЯдраПараметр;
	Ожидаем						= КонтекстЯдра.Плагин("УтвержденияBDD");
	Утверждения					= КонтекстЯдра.Плагин("БазовыеУтверждения");
	ГенераторТестовыхДанных		= КонтекстЯдра.Плагин("СериализаторMXL");
	ЗапросыИзБД					= КонтекстЯдра.Плагин("ЗапросыИзБД");
	УтвержденияПроверкаТаблиц	= КонтекстЯдра.Плагин("УтвержденияПроверкаТаблиц");

КонецПроцедуры

Процедура ЗаполнитьНаборТестов(НаборТестов) Экспорт
	
	НаборТестов.НачатьГруппу("СправочнаяИнформация",Истина);
	НаборТестов.Добавить("ТестДолжен_ПоказатьСправку_Help");
	НаборТестов.Добавить("ТестДолжен_ПоказатьСправку_Помощь");
	НаборТестов.Добавить("ТестДолжен_ПоказатьСправку_Справка");
	НаборТестов.Добавить("ТестДолжен_ПоказатьСправку_Хэлп");
	НаборТестов.Добавить("ТестДолжен_ПоказатьСправку_Хелп");
	
	НаборТестов.НачатьГруппу("МенеджерВременныхТаблиц",Истина);
	НаборТестов.Добавить("ТестДолжен_ПоказатьПустойМенеджераВременныхТаблиц");
	НаборТестов.Добавить("ТестДолжен_ПоказатьНеПустойМенеджераВременныхТаблиц");
	
	НаборТестов.НачатьГруппу("ТестыПросмотраРезультатаВыполненияЗапроса",Истина);
	НаборТестов.Добавить("ТестДолжен_ПоказатьРезультатЗапросаБезМенеджераВременныхТаблиц");
	НаборТестов.Добавить("ТестДолжен_РезультатЗапросаСПустымМенеджеромВременныхТаблиц");
	НаборТестов.Добавить("ТестДолжен_ПоказатьРезультатЗапросаСНеПустымМенеджеромВременныхТаблиц");
	НаборТестов.Добавить("ТестДолжен_ПоказатьРезультатЗапросаССозданиемТаблицы");
	НаборТестов.Добавить("ТестДолжен_ПоказатьРезультатЗапросаСУничтожениемТаблицы");

КонецПроцедуры

Процедура ПередЗапускомТеста() Экспорт
	
КонецПроцедуры

Процедура ПослеЗапускаТеста() Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область ТестированиеПросмотраРезультатаВыполненияЗапроса

Функция ТестДолжен_ПоказатьРезультатЗапросаБезМенеджераВременныхТаблиц() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	1 КАК Поле1,
		|	2 КАК Поле2";
	
	ТаблицыЗапроса = Отладка.Вижу(Запрос);
	
	Утверждения.ПроверитьТип(ТаблицыЗапроса,"Структура", "Ожидалось получение информации для просмотра результата выполнения запроса.");
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Утверждения.ПроверитьТип(РезультатЗапроса,"РезультатЗапроса", "Ожидалось что запрос будет выполнен повторно после просмотра информации по нем.");
	
КонецФункции

Функция ТестДолжен_РезультатЗапросаСПустымМенеджеромВременныхТаблиц() Экспорт
		
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	1 КАК Поле1,
		|	2 КАК Поле2";
	
	ТаблицыЗапроса = Отладка.Вижу(Запрос);
	
	Утверждения.ПроверитьТип(ТаблицыЗапроса,"Структура", "Ожидалось получение информации для просмотра результата выполнения запроса.");
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Утверждения.ПроверитьТип(РезультатЗапроса,"РезультатЗапроса", "Ожидалось что запрос будет выполнен повторно после просмотра информации по нем.");
	
КонецФункции

Функция ТестДолжен_ПоказатьРезультатЗапросаСНеПустымМенеджеромВременныхТаблиц() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = НовыйМенеджерВременных();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаАлфавита.*
	|ИЗ
	|	ВТТаблицаАлфавита КАК ТаблицаАлфавита";
	
	ТаблицыЗапроса = Отладка.Вижу(Запрос);
	
	Утверждения.ПроверитьТип(ТаблицыЗапроса,"Структура", "Ожидалось получение информации для просмотра результата выполнения запроса.");
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Утверждения.ПроверитьТип(РезультатЗапроса,"РезультатЗапроса", "Ожидалось что запрос будет выполнен повторно после просмотра информации по нем.");
	
КонецФункции

Функция ТестДолжен_ПоказатьРезультатЗапросаССозданиемТаблицы() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = НовыйМенеджерВременных();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаАлфавита.*
	|ПОМЕСТИТЬ ВТНоваяТаблицаАлфавита
	|ИЗ
	|	ВТТаблицаАлфавита КАК ТаблицаАлфавита
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НоваяТаблицаАлфавита.*
	|ИЗ
	|	ВТНоваяТаблицаАлфавита КАК НоваяТаблицаАлфавита";
	
	ТаблицыЗапроса = Отладка.Вижу(Запрос);
	
	Утверждения.ПроверитьТип(ТаблицыЗапроса,"Структура", "Ожидалось получение информации для просмотра результата выполнения запроса.");
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Утверждения.ПроверитьТип(РезультатЗапроса,"РезультатЗапроса", "Ожидалось что запрос будет выполнен повторно после просмотра информации по нем.");

КонецФункции

Функция ТестДолжен_ПоказатьРезультатЗапросаСУничтожениемТаблицы() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = НовыйМенеджерВременных();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаАлфавита.*
	|ИЗ
	|	ВТТаблицаАлфавита КАК ТаблицаАлфавита
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТТаблицаАлфавита";
	
	ТаблицыЗапроса = Отладка.Вижу(Запрос);
	
	Утверждения.ПроверитьТип(ТаблицыЗапроса,"Структура", "Ожидалось получение информации для просмотра результата выполнения запроса.");
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Утверждения.ПроверитьТип(РезультатЗапроса,"РезультатЗапроса", "Ожидалось что запрос будет выполнен повторно после просмотра информации по нем.");
	
КонецФункции

#КонецОбласти

#Область ТестированиеСправочнойИнформации

Процедура ТестДолжен_ПоказатьСправку_Help() Экспорт
	СправочнаяИнформация = Отладка.ТестДолжен_ПоказатьСправку_Help();
	ПроверитьСправочнуюИнформацию(СправочнаяИнформация);
КонецПроцедуры

Процедура ТестДолжен_ПоказатьСправку_Помощь() Экспорт
	СправочнаяИнформация = Отладка.ТестДолжен_ПоказатьСправку_Помощь();
	ПроверитьСправочнуюИнформацию(СправочнаяИнформация);
КонецПроцедуры

Процедура ТестДолжен_ПоказатьСправку_Справка() Экспорт
	СправочнаяИнформация = Отладка.ТестДолжен_ПоказатьСправку_Справка();
	ПроверитьСправочнуюИнформацию(СправочнаяИнформация);
КонецПроцедуры

Процедура ТестДолжен_ПоказатьСправку_Хелп() Экспорт
	СправочнаяИнформация = Отладка.ТестДолжен_ПоказатьСправку_Хелп();
	ПроверитьСправочнуюИнформацию(СправочнаяИнформация);
КонецПроцедуры

Процедура ТестДолжен_ПоказатьСправку_Хэлп() Экспорт
	СправочнаяИнформация = Отладка.ТестДолжен_ПоказатьСправку_Хэлп();
	ПроверитьСправочнуюИнформацию(СправочнаяИнформация);
КонецПроцедуры

Процедура ПроверитьСправочнуюИнформацию(Знач СправочнаяИнформация)
	Утверждения.ПроверитьТип(СправочнаяИнформация,"Структура", "Ожидалось получение справки по работе с расширением в виде структуры");
КонецПроцедуры	

#КонецОбласти

#Область ТестированиеМенеджераВременныхТаблиц

Функция ТестДолжен_ПоказатьПустойМенеджераВременныхТаблиц() Экспорт 
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ТаблицыМенеджераВременныхТаблиц = Отладка.Вижу(МенеджерВременныхТаблиц);
	Утверждения.ПроверитьТип(ТаблицыМенеджераВременныхТаблиц,"Структура", "Ожидалось получение информации для просмотра таблиц менеджера временных таблиц.");
	
КонецФункции	

Функция ТестДолжен_ПоказатьНеПустойМенеджераВременныхТаблиц() Экспорт 
	
	МенеджерВременныхТаблиц = НовыйМенеджерВременных();
	ТаблицыМенеджераВременныхТаблиц = Отладка.Вижу(МенеджерВременныхТаблиц);
	Утверждения.ПроверитьТип(ТаблицыМенеджераВременныхТаблиц,"Структура", "Ожидалось получение информации для просмотра таблиц менеджера временных таблиц.");
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция НовыйТаблицаАлфавита()

	ТаблицаАлфавита = Новый ТаблицаЗначений;
	ТаблицаАлфавита.Колонки.Добавить("НомерБуквы",	Новый ОписаниеТипов("Число"),	"Номер Буквы алфавита");
	ТаблицаАлфавита.Колонки.Добавить("КодБуквы",	Новый ОписаниеТипов("Число"),	"Код символа алфавита");
	ТаблицаАлфавита.Колонки.Добавить("Буква",		Новый ОписаниеТипов("Строка"),	"Буква алфавита");
	
	Для КодБуквы = 1040 По 1103 Цикл
		НоваяБуква = ТаблицаАлфавита.Добавить();
		НоваяБуква.НомерБуквы 	= ТаблицаАлфавита.Количество();
		НоваяБуква.КодБуквы 	= КодБуквы;
		НоваяБуква.Буква 		= Символ(КодБуквы);
	КонецЦикла;
	
	Возврат ТаблицаАлфавита;
	
КонецФункции

Функция НовыйМенеджерВременных()
	
	ТаблицаАлфавита = НовыйТаблицаАлфавита();
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаАлфавита.*
	|ПОМЕСТИТЬ ВТТаблицаАлфавита
	|ИЗ
	|	&ТаблицаАлфавита КАК ТаблицаАлфавита";
	
	Запрос.УстановитьПараметр("ТаблицаАлфавита",ТаблицаАлфавита);
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат МенеджерВременныхТаблиц;
	
КонецФункции	

#КонецОбласти